#!/usr/bin/env python3
import sys, socket, threading, urllib.request, urllib.parse, json

PROXY_PORT = int(sys.argv[1])
AGENT_BASE_PORT = int(sys.argv[2])
PROVIDER_URL = sys.argv[3].rstrip("/")
XTREAM_USER = sys.argv[4]
XTREAM_PASS = sys.argv[5]
AGENT_PORT = AGENT_BASE_PORT + PROXY_PORT

def weight_from_metrics():
    try:
        q = urllib.parse.urlencode({"username": XTREAM_USER, "password": XTREAM_PASS})
        url = f"{PROVIDER_URL}/player_api.php?{q}"
        with urllib.request.urlopen(url, timeout=1.5) as r:
            data = json.load(r)
        ui = data.get("user_info", {}) if isinstance(data, dict) else {}
        if ui.get("auth") != 1:
            return "down\n"
        active = int(ui.get("active_cons", 0))
        maxc = int(ui.get("max_connections", 1)) or 1
        if active >= maxc:
            return "0%\n"
        ratio = max(0.0, min(active / maxc, 1.0))
        w = int(round((1.0 - ratio) * 100))
        w = max(1, min(100, w))
        return f"{w}%\n"
    except Exception:
        return "down\n"

def handle(conn, _):
    try:
        conn.sendall(weight_from_metrics().encode("ascii"))
    finally:
        conn.close()

def main():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    s.bind(("127.0.0.1", AGENT_PORT))
    s.listen(64)
    while True:
        c, a = s.accept()
        threading.Thread(target=handle, args=(c, a), daemon=True).start()

if __name__ == "__main__":
    main()
