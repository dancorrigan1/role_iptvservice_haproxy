---
- name: Test each upstream account
  ansible.builtin.uri:
    url: "{{ item.0.url }}/player_api.php?username={{ item.1.username }}&password={{ item.1.password }}"
    method: GET
    status_code: 200
  loop: "{{ role_iptvservice__credentials | subelements('provider_credentials') }}"
  register: __upstreams
  ignore_errors: true
  no_log: false

- name: Normalize results
  ansible.builtin.set_fact:
    __results: >-
      {%- set out = [] -%}
      {%- for r in __upstreams.results -%}
        {%- set _ = out.append({
          'account': (r.item.1.account if r.item is defined else None),
          'username': (r.item.1.username if r.item is defined else None),
          'password': (r.item.1.password if r.item is defined else None),
          'url': (r.item.0.url if r.item is defined else None),
          'status': (r.status | string if r.status is defined else None),
          'auth': (r.json.user_info.auth if r.json is defined and r.json.user_info is defined else None),
          'active_cons': (r.json.user_info.active_cons if r.json is defined and r.json.user_info is defined else None),
          'max_connections': (r.json.user_info.max_connections if r.json is defined and r.json.user_info is defined else None)
        }) -%}
      {%- endfor -%}
      {{ out }}

- name: Classify
  ansible.builtin.set_fact:
    __failed_upstreams: >-
      {{ (__results | selectattr('auth', 'defined') | selectattr('auth', 'ne', 1) | list) + (__results | selectattr('status', 'equalto', '512') | list) }}
    __successful_upstreams: "{{ __results | selectattr('auth', 'equalto', 1) | list }}"

- name: Kill failed iptv-proxy pids
  community.general.pids:
    pattern: "--xtream-user {{ item.username }} --xtream-password {{ item.password }}"
  become: true
  loop: "{{ __failed_upstreams }}"
  register: __pids

- name: Kill pids
  ansible.builtin.command:
    cmd: "kill -9 {{ item.pids | join(' ') }}"
  become: true
  loop: "{{ __pids.results }}"
  when: item.pids | length > 0
  changed_when: true
